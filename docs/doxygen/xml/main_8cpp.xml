<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">mml.hpp</includes>
    <includes refid="mml-math_8hpp" local="no">mml-math.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>mml-math/logging.hpp</label>
        <link refid="logging_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>mml.hpp</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="8">
        <label>mml-math.hpp</label>
        <link refid="mml-math_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>fstream</label>
      </node>
      <node id="14">
        <label>mml-math/matrix1.hpp</label>
        <link refid="matrix1_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>mml-math/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="9">
        <label>mml-math/basic_operations.hpp</label>
        <link refid="basic__operations_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>mml-math/derivate.hpp</label>
        <link refid="derivate_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>mml-math/functions.hpp</label>
        <link refid="functions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>calculator/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>calculator</header>
      <description><para>: <simplesect kind="author"><para>Mike Moser : </para>
</simplesect>
<simplesect kind="date"><para>22.05.2024 : </para>
</simplesect>
<simplesect kind="version"><para>4 : : </para>
</simplesect>
</para>
</description>
      <memberdef kind="define" id="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" prot="public" static="no">
        <name>calc_log</name>
        <initializer>&quot;./calc.log&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="calculator/main.cpp" line="52" column="9" bodyfile="calculator/main.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a97ee70a8770dc30d06c744b24eb2fcfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void help</definition>
        <argsstring>()</argsstring>
        <name>help</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Help Page </para>
</simplesect>
<simplesect kind="return"><para>None </para>
</simplesect>
<simplesect kind="author"><para>Mike Moser </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="calculator/main.cpp" line="75" column="6" bodyfile="calculator/main.cpp" bodystart="75" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>NOTE Transform from latex matric to compatible format TODO</para>
        </inbodydescription>
        <location file="calculator/main.cpp" line="130" column="5" bodyfile="calculator/main.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>: : Version history: : <simplesect kind="version"><para>4 (22.05.2024) Big changes for the matrix calculations : </para>
</simplesect>
<simplesect kind="version"><para>3.0.4 (07.01.2024) Fixed some bugs : </para>
</simplesect>
<simplesect kind="version"><para>3.0.3 (27.01.2023) Determinantenberechnung korrigiert; Korrektur, wenn eine Matrix ohne Anfangs- bzw. Endklammer übergeben wird. : </para>
</simplesect>
<simplesect kind="version"><para>3.0.2 (06.09.2022) Atomare Masseneinheit hinzugefügt, logb todo gelöscht =&gt; einfach als log(x)/log(b) berechnen, Log Datei nur 0 löschen nach dem Komma : </para>
</simplesect>
<simplesect kind="version"><para>3.0.1 (04.03.2022) Bracket Problem gelöst (bracket check); arcsin, arccos, sqrt domain error hinzugefügt, grad &lt;=&gt; rad korrigiert : </para>
</simplesect>
<simplesect kind="version"><para>3.0 (17.09.2021) Komplette Operatoren überarbeitet und ein paar Fehler behoben. : </para>
</simplesect>
<simplesect kind="version"><para>2.5.5 (03.02.2021) Grad zu Radiant, Radiant zu Grad, arcsin, arccos, arctan hinzugefügt : </para>
</simplesect>
<simplesect kind="version"><para>2.5.4 (30.10.2020) Verbesserungen, Gauß-Verfahren korrigiert bei Nullspalte, logging verbessert, old_add reingemacht : </para>
</simplesect>
<simplesect kind="version"><para>2.5.3 (08.07.2020) Logging für Matrix : </para>
</simplesect>
<simplesect kind="version"><para>2.5.2 (30.04.2020) Fehlerüberarbeitung summation neu gemacht, da mittlerer Term ignoriert : </para>
</simplesect>
<simplesect kind="version"><para>2.5.1 (14.04.2020) Fehlerüberarbeitung ; </para>
</simplesect>
<simplesect kind="version"><para>2.5 (07.03.2020) Logdatei überarbeitet durch Klasse log : </para>
</simplesect>
<simplesect kind="version"><para>2.4 (22.12.2019) Kommentarfunktion für die logdatei : </para>
</simplesect>
<simplesect kind="version"><para>2.3 (10.08.2019) Logdatei implementiert mit Ausgabe über -l, <ndash/>logfile : </para>
</simplesect>
<simplesect kind="version"><para>2.2 (14.03.2019) Physikalische Konstanten hinzugefügt, -u überarbeitet mit anstatt , , getArg implementiert : </para>
</simplesect>
<simplesect kind="version"><para>2.1 (27.02.2019) pos_bracket überarbeitet und verbessert, Klammerbehandlung hinzugefügt, <ndash/>calculations erstellt, <ndash/>cs mit alten Resultaten und ersetzen von o ohne -o bei <ndash/>cs, : save_result als inline, calculations erstellt mit Übernahme von den Ergebnissen bei -cs : </para>
</simplesect>
<simplesect kind="version"><para>2.0 (22.02.2019) Funktion replace und add_oldresult, sqrt integriert, ^ integriert, si-präfixe, mehrere Variablen verwenden; log, ln, log2, logb, exp, sin, cos, tan integriert, : calculate erstellt, -t hinzugefügt : </para>
</simplesect>
<simplesect kind="version"><para>1.6 (17.02.2019) e Funktion hinzugefügt, exponentenfunktion durch pow ersetzt, if Bedingungen für pi und ki hinzugefügt : </para>
</simplesect>
<simplesect kind="version"><para>1.5 (10.12.2018) Pi Funktion hinzugefügt für basic_operations, sowie Verbesserungen von -s und -m, Übernahme der alten Werte, Variable x verwenden, mml::string integriert : </para>
</simplesect>
<simplesect kind="version"><para>1.4 (09.11.2018) <ref refid="basic__operations_8hpp" kindref="compound">basic_operations.hpp</ref> erstellt mit -s und -m : </para>
</simplesect>
<simplesect kind="version"><para>1.3 (01.11.2018) Grenzen angepasst, die erlaubt sind. Hat bei der Multiplikation 9 nicht erlaubt : </para>
</simplesect>
<simplesect kind="version"><para>1.2 (15.10.2018) Neue Funktion rechnen mit Exponenten zur Basis, Hilfeseite nach Muster, uintX_t angepasst : </para>
</simplesect>
<simplesect kind="version"><para>1.1 (22.05.2018) Ableiten einer einfachen Funktion : </para>
</simplesect>
<simplesect kind="version"><para>1.0 (21.05.2018) : : :</para>
</simplesect>
: : Berechnung von verschiedenen Sachen mit der Konsole : : </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setprecision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mml.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mml-math_8hpp" kindref="compound">mml-math.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>calc_log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>calc_log<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;./calc.log&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE<sp/>Rechner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>Bruchform<sp/>ausgeben</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>log(12)<sp/>in<sp/>-cs<sp/>geht<sp/>nicht<sp/>(behoben,<sp/>aber<sp/>nur<sp/>notlösung<sp/>=&gt;<sp/>works<sp/>no?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>nachschauen<sp/>welche<sp/>Variablen<sp/>gehen<sp/>und<sp/>welche<sp/>nicht<sp/>=&gt;<sp/>Warnung<sp/>ausgeben</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>grad<sp/>in<sp/>rad<sp/>umrechner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>Warnung<sp/>wenn<sp/>Buchstabe<sp/>in<sp/>Rechnung<sp/>:<sp/>rechnung<sp/>-c<sp/>asd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>look<sp/>at<sp/>logb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>Ausgaben<sp/>werden<sp/>gekürzt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE<sp/>Matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>Matrix<sp/>old<sp/>rechnung<sp/>(bzw.<sp/>in<sp/>matrixform<sp/>ausgeben<sp/>temporär)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>Matrixnorm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>Skalarmultiplikation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>rechner<sp/>-m<sp/>&quot;[0,0,1]*[[0,2,0],[3,0,2],[0,3,0]]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a97ee70a8770dc30d06c744b24eb2fcfc" kindref="member">help</ref>()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::help::header(</highlight><highlight class="stringliteral">&quot;Führt<sp/>verschiedene<sp/>Berechungen<sp/>durch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tDieses<sp/>Programm<sp/>führt<sp/>verschiedene<sp/>Berechnungen<sp/>durch<sp/>abhängig<sp/>von<sp/>den<sp/>Argumenten.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tBei<sp/>der<sp/>Verwendung<sp/>von<sp/>Klammern<sp/>sind<sp/>Anführunszeichen<sp/>notwendig<sp/>bei<sp/>der<sp/>Gleichung.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tErforderliche<sp/>Argumente<sp/>für<sp/>lange<sp/>Optionen<sp/>sind<sp/>auch<sp/>für<sp/>kurze<sp/>erforderlich.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-a,<sp/>--adjunct&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Adjunkte<sp/>einer<sp/>Matrix<sp/>berechnen.<sp/>Mit<sp/>-m<sp/>Matrix<sp/>übergeben&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-c,<sp/>--calculate&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Gleichung<sp/>lösen<sp/>mit<sp/>allen<sp/>Operatoren.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-cs,<sp/>--calculations&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Mehrere<sp/>verschiedene<sp/>Gleichungen<sp/>lösen<sp/>mit<sp/>allen<sp/>Operatoren.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-d,<sp/>--det&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Determinante<sp/>einer<sp/>Matrix<sp/>berechnen.<sp/>Mit<sp/>-m<sp/>Matrix<sp/>übergeben&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>--grad&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ausgabe<sp/>oder<sp/>Angabe<sp/>in<sp/>Grad<sp/>in<sp/>Abhängigkeit<sp/>des<sp/>Operators.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-h,<sp/>--help&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ausgabe<sp/>dieser<sp/>Hilfe.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-i,<sp/>--inverse&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Inverse<sp/>einer<sp/>Matrix<sp/>berechnen.<sp/>Mit<sp/>-m<sp/>Matrix<sp/>übergeben&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-k,<sp/>--comment&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Kommentar<sp/>in<sp/>die<sp/>Logdatei<sp/>hinter<sp/>Rechnung.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-l,<sp/>--log&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ausgabe<sp/>der<sp/>Logdatei.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-lr,<sp/>--log_reset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Zurücksetzen<sp/>der<sp/>Logdatei&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-lb,<sp/>--log_backup&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Backup<sp/>der<sp/>Logdatei&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-m,<sp/>--matrix&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Multiplzieren<sp/>und<sp/>Addieren<sp/>von<sp/>Matrizen.Matrixform<sp/>[[1.,Reihe],[2.,Reihe]]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-ml,<sp/>--matrix-latex&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Format<sp/>in<sp/>Latex.<sp/>(Achtung<sp/>Matrix<sp/>endet<sp/>und<sp/>startet<sp/>mit<sp/>&apos;|&apos;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-t,<sp/>--timer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Ausgabe<sp/>der<sp/>Dauer<sp/>der<sp/>Berechnung&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-tr,<sp/>--transpose&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Transponierte<sp/>einer<sp/>Matrix<sp/>berechnen.<sp/>Mit<sp/>-m<sp/>Matrix<sp/>übergeben&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-u&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Wertzuweisung<sp/>einer<sp/>oder<sp/>mehreren<sp/>unbekannten<sp/>Variable(n)<sp/>mit<sp/>Trennzeichen<sp/>&apos;:&apos;<sp/>in<sp/>der<sp/>Gleichung.<sp/>z.B.<sp/>-u<sp/>x=2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::chapter(</highlight><highlight class="stringliteral">&quot;Verfügbare<sp/>Operationen:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Addition<sp/>verschiedener<sp/>Werte.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Subtrahieren<sp/>verschiedener<sp/>Werte.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Multiplikation<sp/>verschiedener<sp/>Werte.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Dividieren<sp/>von<sp/>zwei<sp/>Zahlen(alt).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Dividieren<sp/>von<sp/>mehreren<sp/>Zahlen(alt).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Ableiten<sp/>einer<sp/>Funktion.<sp/>Direkt<sp/>als<sp/>Parameter<sp/>übergeben(alt).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Multiplizieren<sp/>einer<sp/>Basis<sp/>zu<sp/>einem<sp/>Exponenten.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;^(&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Multiplizieren<sp/>einer<sp/>Basis<sp/>zu<sp/>einem<sp/>Exponenten.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;exp(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Berechnen<sp/>von<sp/>exp^(x).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;sin(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;sin<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;cos(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;cos<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;tan(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;tan<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;arcsin(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;arcsin<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;arccos(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;arccos<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;arctan(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;arctan<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;ln(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;logarithmus<sp/>naturalis<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;log(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;10er<sp/>Logarithmus<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;log2(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;2er<sp/>Logarithmus<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;logb(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Logarithmus<sp/>zur<sp/>Basis<sp/>b<sp/>berechnen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;sqrt(x)&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Wurzel<sp/>ziehen<sp/>von<sp/>x.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::chapter(</highlight><highlight class="stringliteral">&quot;Optionen<sp/>bei<sp/>--calculations:&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::option(</highlight><highlight class="stringliteral">&quot;rx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Verwendung<sp/>des<sp/>Ergebnisses<sp/>von<sp/>Gleichung<sp/>x,<sp/>rx<sp/>wird<sp/>in<sp/>der<sp/>neuen<sp/>Gleichung<sp/>ersetzt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::chapter(</highlight><highlight class="stringliteral">&quot;Sonstiges:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tVorhandene<sp/>Konstanten:<sp/>pi,<sp/>exp,E<sp/>,<sp/>P_c,<sp/>P_k,<sp/>P_m,<sp/>P_e,<sp/>P_G,<sp/>P_h,<sp/>P_µ,<sp/>P_NA,<sp/>P_u&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tVorhandene<sp/>Potenzen:<sp/><sp/><sp/>p,<sp/>n,<sp/>µ,<sp/>m,<sp/>k,<sp/>M,<sp/>G,<sp/>T<sp/>oder<sp/>mit<sp/>e&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::help::foot(</highlight><highlight class="stringliteral">&quot;3.0.4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;January&quot;</highlight><highlight class="normal">,<sp/>2024);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::shell::arg<sp/><sp/><sp/><sp/><sp/>args<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(argc,argv);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::Timer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>mml::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.notArg(</highlight><highlight class="stringliteral">&quot;-t&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--timer&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.stop();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.size()<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::shell::letter(</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fehlende<sp/>Eingabe<sp/>der<sp/>gewünschten<sp/>Operation!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::shell::normal();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a97ee70a8770dc30d06c744b24eb2fcfc" kindref="member">help</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;--help&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;-h&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a97ee70a8770dc30d06c744b24eb2fcfc" kindref="member">help</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((args.findArg(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--calculate&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">/*||<sp/>args.findArg(&quot;-s&quot;,&quot;--summation&quot;)*/</highlight><highlight class="normal"><sp/>||<sp/>args.findArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>args.size()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::shell::warn(</highlight><highlight class="stringliteral">&quot;Fehlende<sp/>Eingabe!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--calculate&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespacemml_1_1rechner_1a18e519bbf2f66dac7f5057c4d2b0243a" kindref="member">mml::rechner::calculate</ref>(args,args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemml_1_1rechner_1a1d6654f4dd0e7291ab5862dacb8b9a94" kindref="member">mml::rechner::save_result</ref>(args,<sp/>args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--calculate&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1],result,<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;-cs&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--calculations&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;mml::string&gt;<sp/>equations;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>results<sp/>=<sp/><ref refid="namespacemml_1_1rechner_1a114f8707b5ebd54263ffd2123b46deaa" kindref="member">mml::rechner::calculations</ref>(args,<sp/>equations);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>results<sp/>and<sp/>equations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>equations.size();<sp/>i++)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemml_1_1rechner_1a1d6654f4dd0e7291ab5862dacb8b9a94" kindref="member">mml::rechner::save_result</ref>(args,<sp/>equations[i],<sp/>results[i],<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.findArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.findArg(</highlight><highlight class="stringliteral">&quot;-ml&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix-latex&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::string<sp/>temp<sp/>=<sp/>args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1];<sp/></highlight><highlight class="comment">//<sp/>Line<sp/>with<sp/>the<sp/>matrix<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::string<sp/>temp_s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>string<sp/>to<sp/>build<sp/>the<sp/>new<sp/>calculations<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>braket<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>indicate<sp/>whether<sp/>the<sp/>matrix<sp/>is<sp/>finished<sp/>or<sp/>starts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>string<sp/>in<sp/>compatible<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>temp.size();i++)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;],[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"><sp/>and<sp/>braket){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>braket<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"><sp/>and<sp/>not<sp/>braket)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;[[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>braket<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_s<sp/>=<sp/>temp_s.str()<sp/>+<sp/>(char)<sp/>temp[i];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1]<sp/>=<sp/>temp_s;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1]<sp/>=<sp/>args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1].replace(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Leerzeichen<sp/>ersetzen,<sp/>aber<sp/>Achtung<sp/>Matrix<sp/>falsch<sp/>wenn<sp/>nicht<sp/>mit<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;-a&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--adjugate&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::math::matrix<sp/>mat(args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1].str());</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.exist(</highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--verbose&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>adjugate<sp/>of<sp/>the<sp/>matrix&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.print();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>adjugate<sp/>is&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>mat.adjugate();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.print();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.exist(</highlight><highlight class="stringliteral">&quot;-d&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--det&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::math::matrix<sp/>mat(args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1].str());</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.exist(</highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--verbose&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>determinant<sp/>of<sp/>the<sp/>matrix&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.print();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mat.det()&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>determinant<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mat.det()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>save<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;-i&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--inverse&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::math::matrix<sp/>mat(args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1].str());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.exist(</highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--verbose&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>inverse<sp/>of<sp/>the<sp/>matrix&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.print();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>inverse<sp/>matrix<sp/>is&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>mat.inverse();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.print();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>save<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;-tr&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--transpose&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::math::matrix<sp/>mat(args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1].str());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.exist(</highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--verbose&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>transpose<sp/>of<sp/>the<sp/>matrix&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.print();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>transposed<sp/>matrix<sp/>is&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>mat.transpose();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.print();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>save<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>=<sp/><ref refid="namespacemml_1_1rechner_1aa7e8d1b0097e770c6861d4ba84d3abcb" kindref="member">mml::rechner::matrix_calculation</ref>(args,<sp/>args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemml_1_1rechner_1a96b844e16c756f7599cf5c7674c15a5e" kindref="member">mml::rechner::save_matrix</ref>(args,<sp/>args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">)<sp/>+<sp/>1],<sp/>matrix,<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;-s&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--summation&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::vector&lt;double&gt;<sp/>values<sp/>=<sp/><ref refid="namespacemml_1_1rechner_1a8fb791fea6c89ed76525a731bb361a2f" kindref="member">mml::rechner::add</ref>(args);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>values.sum();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.log(<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[summation]<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(result));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.findArg(</highlight><highlight class="stringliteral">&quot;-l&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--log&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;-lv&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mml::Unix::exist(<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::log<sp/>log(<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log.print(args.exist(</highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--verbose&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;-lv&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Es<sp/>existiert<sp/>keine<sp/>Logdatei!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.findArg(</highlight><highlight class="stringliteral">&quot;-lr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;log_reset&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemml_1_1rechner_1ad780938d04a50376b2275f9ecb60348f" kindref="member">mml::rechner::reset_logfile</ref>(args,<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.findArg(</highlight><highlight class="stringliteral">&quot;-lb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--log-backup&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemml_1_1rechner_1ae12dc270ab8df302b28cb23db2ca5cba" kindref="member">mml::rechner::backup_logfile</ref>(args,<sp/><ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespacemml_1_1rechner_1a18e519bbf2f66dac7f5057c4d2b0243a" kindref="member">mml::rechner::calculate</ref>(args,args[1]);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemml_1_1rechner_1a1d6654f4dd0e7291ab5862dacb8b9a94" kindref="member">mml::rechner::save_result</ref>(args,<sp/>args[1],result,<ref refid="main_8cpp_1aebdcb723b52214cd0d7e46652e945efb" kindref="member">calc_log</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((args.findArg(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--calculate&quot;</highlight><highlight class="normal">)<sp/>||<sp/>args.findArg(</highlight><highlight class="stringliteral">&quot;-s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--summation&quot;</highlight><highlight class="normal">)<sp/>||<sp/>args.exist(</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>!args.findArg(</highlight><highlight class="stringliteral">&quot;-cs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--calculations&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>args.notArg(</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--matrix&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.findArg(</highlight><highlight class="stringliteral">&quot;-p&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--digits&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>betaphase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result<sp/>(eventually<sp/>wrong<sp/>decimal<sp/>point<sp/>numbers!):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(args[args.positionArg(</highlight><highlight class="stringliteral">&quot;-p&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--digits&quot;</highlight><highlight class="normal">)+1].atoi())<sp/>&lt;&lt;<sp/>result<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>result<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args.findArg(</highlight><highlight class="stringliteral">&quot;-t&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;--timer&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calculation<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time.range()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="calculator/main.cpp"/>
  </compounddef>
</doxygen>
