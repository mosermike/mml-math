<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacemml_1_1functions" kind="namespace" language="C++">
    <compoundname>mml::functions</compoundname>
      <sectiondef kind="user-defined">
      <header>functions.cpp</header>
      <description><para><simplesect kind="author"><para>Mike Moser</para>
</simplesect>
Enth√§lt verschiedene Funktionen </para>
</description>
      <memberdef kind="function" id="namespacemml_1_1functions_1aed447bd3bda04bd6d996e1ab7a0215de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mml::functions::count_sym</definition>
        <argsstring>(std::string test, char symbol)</argsstring>
        <name>count_sym</name>
        <param>
          <type>std::string</type>
          <declname>test</declname>
        </param>
        <param>
          <type>char</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Anzahl eines Zeichens bestimmen</para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="71" column="10" bodyfile="src/functions.cpp" bodystart="250" bodyend="258" declfile="include/mml/functions.hpp" declline="71" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a5a85af79e53e85778f1f4f71d74abcff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::functions::cout</definition>
        <argsstring>(std::vector&lt; std::string &gt; vec)</argsstring>
        <name>cout</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Inhalt eines Vektors ausgeben</para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="78" column="6" bodyfile="src/functions.cpp" bodystart="260" bodyend="263" declfile="include/mml/functions.hpp" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a45b7650e7b0cdffee9f33b8841274d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::functions::cout</definition>
        <argsstring>(std::vector&lt; mml::string &gt; vec)</argsstring>
        <name>cout</name>
        <param>
          <type>std::vector&lt; <ref refid="classmml_1_1string" kindref="compound">mml::string</ref> &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="79" column="6" bodyfile="src/functions.cpp" bodystart="265" bodyend="268" declfile="include/mml/functions.hpp" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1ac38212043b94eebcd39dafa61ab4f6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::functions::cout</definition>
        <argsstring>(std::vector&lt; double &gt; vec)</argsstring>
        <name>cout</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="80" column="6" bodyfile="src/functions.cpp" bodystart="270" bodyend="273" declfile="include/mml/functions.hpp" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1aab19815bc6c5988253ef00f76ef8c4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::functions::cout</definition>
        <argsstring>(std::vector&lt; int &gt; vec)</argsstring>
        <name>cout</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="81" column="6" bodyfile="src/functions.cpp" bodystart="275" bodyend="278" declfile="include/mml/functions.hpp" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1ab329e8a7f124bca7f7f6ae254b05ac19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mml::functions::declare_month</definition>
        <argsstring>(int month_nr)</argsstring>
        <name>declare_month</name>
        <param>
          <type>int</type>
          <declname>month_nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Den Monatsname zum Monat bestimmen</para>
<para><simplesect kind="return"><para>Monatsname </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="89" column="13" bodyfile="src/functions.cpp" bodystart="280" bodyend="296" declfile="include/mml/functions.hpp" declline="89" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a8639fcc5e87c478c7a197f829e033048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; mml::functions::erase</definition>
        <argsstring>(std::vector&lt; std::string &gt; data)</argsstring>
        <name>erase</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Einen Vektor leeren</para>
</simplesect>
<simplesect kind="return"><para>leeren Vektor </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="97" column="13" bodyfile="src/functions.cpp" bodystart="297" bodyend="304" declfile="include/mml/functions.hpp" declline="97" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a955b1a9bf2b1b4042a542071fff5d6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classmml_1_1string" kindref="compound">mml::string</ref> &gt;</type>
        <definition>std::vector&lt; mml::string &gt; mml::functions::erase</definition>
        <argsstring>(std::vector&lt; mml::string &gt; data)</argsstring>
        <name>erase</name>
        <param>
          <type>std::vector&lt; <ref refid="classmml_1_1string" kindref="compound">mml::string</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="98" column="13" bodyfile="src/functions.cpp" bodystart="306" bodyend="313" declfile="include/mml/functions.hpp" declline="98" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a545e2cce4a554164b63a8f3d999069eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; mml::functions::erase</definition>
        <argsstring>(std::vector&lt; double &gt; data)</argsstring>
        <name>erase</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="99" column="13" bodyfile="src/functions.cpp" bodystart="315" bodyend="321" declfile="include/mml/functions.hpp" declline="99" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a29d42b19532064af399a6c526da85f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; mml::functions::erase</definition>
        <argsstring>(std::vector&lt; int &gt; data)</argsstring>
        <name>erase</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="100" column="13" bodyfile="src/functions.cpp" bodystart="323" bodyend="328" declfile="include/mml/functions.hpp" declline="100" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1ab0e3f9a7184313f2bedbb09500f2b784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mml::functions::get_random</definition>
        <argsstring>(int min=0, int max=100)</argsstring>
        <name>get_random</name>
        <param>
          <type>int</type>
          <declname>min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Eine Zufallszahl in bestimmten Grenzen erzeugen</para>
</simplesect>
<simplesect kind="return"><para>Zufallszahl </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="108" column="5" bodyfile="src/functions.cpp" bodystart="228" bodyend="237" declfile="include/mml/functions.hpp" declline="108" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a7d8132e164cdbeb2b7f165909f2d1bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t mml::functions::smallest_num</definition>
        <argsstring>(std::vector&lt; std::size_t &gt; values, std::size_t pos=0)</argsstring>
        <name>smallest_num</name>
        <param>
          <type>std::vector&lt; std::size_t &gt;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Eine Linie aus einer ge√∂ffneten Datei zur√ºckgeben</para>
</simplesect>
<simplesect kind="return"><para>Zeile aus einer Datei </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
<simplesect kind="note"><para>Kleinste Zahl herausfinden</para>
</simplesect>
<simplesect kind="return"><para>kleinste Zahl </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="126" column="13" bodyfile="src/functions.cpp" bodystart="245" bodyend="248" declfile="include/mml/functions.hpp" declline="126" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a7292b096bbe4bba8f51dad3ddcd17397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mml::functions::random_str</definition>
        <argsstring>(uint32_t letters=10, std::string value=&quot;&quot;)</argsstring>
        <name>random_str</name>
        <param>
          <type>uint32_t</type>
          <declname>letters</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>value</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Anpingen einer IP-Adresse oder eines Strings mit pip install pyping installieren, wenn nicht vorhanden -lpython2.7 notwendig</para>
</simplesect>
<simplesect kind="return"><para>true, wenn erreichbar </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
<simplesect kind="note"><para>Eine Zufallsstring in Kleinbuchstaben erzeugen</para>
</simplesect>
<simplesect kind="return"><para>Zufallsstring </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="143" column="13" bodyfile="src/functions.cpp" bodystart="330" bodyend="336" declfile="include/mml/functions.hpp" declline="143" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a26b19eed5d28eb73559fd7d70814874f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; mml::functions::Add_Vector</definition>
        <argsstring>(std::vector&lt; double &gt; vector1, std::vector&lt; double &gt; vector2)</argsstring>
        <name>Add_Vector</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>vector1</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>tempor√§rer Dateiname erstellen</para>
</simplesect>
<simplesect kind="return"><para>/tmp/c++_XXXXXX </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
<simplesect kind="note"><para>Zwei Vektoren zu einem Vektor hinzuf√ºgen</para>
</simplesect>
<simplesect kind="return"><para>double Vektor </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="159" column="13" bodyfile="src/functions.cpp" bodystart="29" bodyend="33" declfile="include/mml/functions.hpp" declline="159" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1aa44cc5b5a5e8ba0767dbdd25373222cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; mml::functions::Add_Vector</definition>
        <argsstring>(std::vector&lt; std::string &gt; vector1, std::vector&lt; std::string &gt; vector2)</argsstring>
        <name>Add_Vector</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>vector1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="160" column="13" bodyfile="src/functions.cpp" bodystart="35" bodyend="39" declfile="include/mml/functions.hpp" declline="160" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a96882f2e48261be8bb9ed69325c86858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mml::functions::cifs</definition>
        <argsstring>(std::string src, std::string dst, mml::string fstype, std::string user, std::string pass)</argsstring>
        <name>cifs</name>
        <param>
          <type>std::string</type>
          <declname>src</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="classmml_1_1string" kindref="compound">mml::string</ref></type>
          <declname>fstype</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>user</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Einh√§ngen eines Netzwerklaufwerkes</para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="169" column="10" bodyfile="src/functions.cpp" bodystart="112" bodyend="129" declfile="include/mml/functions.hpp" declline="169" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a7ad5e71dbc16eacd87aa365de8ad66be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t mml::functions::digits</definition>
        <argsstring>(double number)</argsstring>
        <name>digits</name>
        <param>
          <type>double</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Anzahl der Stellen eines doubles bestimmen</para>
</simplesect>
<simplesect kind="return"><para>std::size_t </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="179" column="13" bodyfile="src/functions.cpp" bodystart="208" bodyend="220" declfile="include/mml/functions.hpp" declline="179" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a0e96e0452d4751613aeb89406e7e5b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; mml::functions::Get_Values</definition>
        <argsstring>(std::string filepath, int16_t min_value=0)</argsstring>
        <name>Get_Values</name>
        <param>
          <type>std::string</type>
          <declname>filepath</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>min_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Umwandeln von und zu einem String oder Char</para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
<simplesect kind="note"><para>Zahlenwerte aus einer Datei in einen Vektor schreiben</para>
</simplesect>
<simplesect kind="return"><para>double Vektor </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="196" column="13" bodyfile="src/functions.cpp" bodystart="76" bodyend="108" declfile="include/mml/functions.hpp" declline="196" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1ad25f2df1d22305eca7a0fecc4e139a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::functions::getline</definition>
        <argsstring>(std::ifstream &amp;input, mml::string &amp;String)</argsstring>
        <name>getline</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classmml_1_1string" kindref="compound">mml::string</ref> &amp;</type>
          <declname>String</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>aus einer Datei eine Zeile auslesen</para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="203" column="6" bodyfile="src/functions.cpp" bodystart="223" bodyend="225" declfile="include/mml/functions.hpp" declline="203" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a76ebf0e616c5163d81986062a58b5f82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mml::functions::lower</definition>
        <argsstring>(std::string input)</argsstring>
        <name>lower</name>
        <param>
          <type>std::string</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Alle Werte im String als Kleinbuchstaben</para>
</simplesect>
<simplesect kind="return"><para>String mit Kleinbuchstaben </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="210" column="13" bodyfile="src/functions.cpp" bodystart="343" bodyend="349" declfile="include/mml/functions.hpp" declline="210" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a15d9ea573c2898290db82cbb049559b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mml::functions::Mean_of_Vector</definition>
        <argsstring>(std::vector&lt; double &gt; values, bool ausgabe=false)</argsstring>
        <name>Mean_of_Vector</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ausgabe</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Durchschnitt berechnen aus den Werten in einem Vektor oder Array</para>
</simplesect>
<simplesect kind="return"><para>Durchschnittswert </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="218" column="8" bodyfile="src/functions.cpp" bodystart="41" bodyend="58" declfile="include/mml/functions.hpp" declline="218" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a611b42b46de00443a41d65682f56881d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mml::functions::Mean_of_Array</definition>
        <argsstring>(double array[], uint16_t length, bool ausgabe=false)</argsstring>
        <name>Mean_of_Array</name>
        <param>
          <type>double</type>
          <declname>array</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ausgabe</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="219" column="8" bodyfile="src/functions.cpp" bodystart="60" bodyend="73" declfile="include/mml/functions.hpp" declline="219" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a4c6ace1c6a5dff97fa85115618a217fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mml::functions::mount_Dir</definition>
        <argsstring>(mml::shell::arg args, std::string mountpath, string mountpoint, string controlpoint, std::string user, std::string pass1, const char *fstype, int count)</argsstring>
        <name>mount_Dir</name>
        <param>
          <type><ref refid="classmml_1_1shell_1_1arg" kindref="compound">mml::shell::arg</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>mountpath</declname>
        </param>
        <param>
          <type><ref refid="classmml_1_1string" kindref="compound">string</ref></type>
          <declname>mountpoint</declname>
        </param>
        <param>
          <type><ref refid="classmml_1_1string" kindref="compound">string</ref></type>
          <declname>controlpoint</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>user</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>pass1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fstype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Bestimmung von Dateien zur Einbindung eines Laufwerkes in der Funktion cifs</para>
</simplesect>
<simplesect kind="return"><para>Passwort </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="227" column="13" bodyfile="src/functions.cpp" bodystart="152" bodyend="204" declfile="include/mml/functions.hpp" declline="227" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacemml_1_1functions_1a9262c7cd8e5f4205b650e9eb756a9655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mml::functions::unmount_dir</definition>
        <argsstring>(std::string mount_dir, std::string controlpoint=&quot;&quot;)</argsstring>
        <name>unmount_dir</name>
        <param>
          <type>std::string</type>
          <declname>mount_dir</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>controlpoint</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Aush√§ngen eines Laufwerkes</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments passed to the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mountpath</parametername>
</parameternamelist>
<parameterdescription>
<para>String, where the directory is mounted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="237" column="6" bodyfile="src/functions.cpp" bodystart="131" bodyend="150" declfile="include/mml/functions.hpp" declline="237" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacemml_1_1functions_1aed3e32c593011593a726a6c90cf24be5" prot="public" static="no">
        <type><ref refid="classmml_1_1shell_1_1arg" kindref="compound">mml::shell::arg</ref></type>
        <definition>typedef mml::shell::arg mml::functions::vector</definition>
        <argsstring></argsstring>
        <name>vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/shell.hpp" line="346" column="25" bodyfile="include/mml/shell.hpp" bodystart="346" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemml_1_1functions_1a294eb401efb2876d21d5401f34a0284c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t mml::functions::const_string_hash</definition>
        <argsstring>(const char *string)</argsstring>
        <name>const_string_hash</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Bilden eines Hashwertes zu einem String</para>
</simplesect>
<simplesect kind="return"><para>Hashwert als Integerwert </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/functions.hpp" line="34" column="20" bodyfile="include/mml/functions.hpp" bodystart="34" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/mml/functions.hpp" line="26" column="1"/>
  </compounddef>
</doxygen>
