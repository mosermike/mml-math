<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmml_1_1thread_1_1Thread" kind="class" language="C++" prot="public">
    <compoundname>mml::thread::Thread</compoundname>
    <includes refid="Thread_8hpp" local="no">Thread.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmml_1_1thread_1_1Thread_1a91bae489f2ee7d28a1324c67547884a4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mml::thread::Thread::thread_writing_active</definition>
        <argsstring></argsstring>
        <name>thread_writing_active</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="21" column="6" bodyfile="include/mml/Thread.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmml_1_1thread_1_1Thread_1a657e848c50b525367ce820ece964e80f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mml::thread::Thread::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="22" column="5" bodyfile="include/mml/Thread.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmml_1_1thread_1_1Thread_1a3ea4fcd4d546fcbfc2b2fbd6ce75c33f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mml::thread::Thread::max_i</definition>
        <argsstring></argsstring>
        <name>max_i</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="23" column="5" bodyfile="include/mml/Thread.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1a8d08a3614525c022f8067a181c4e3b89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mml::thread::Thread::Thread</definition>
        <argsstring>()</argsstring>
        <name>Thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="28" column="1" bodyfile="include/mml/Thread.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1ab6188b06bb0e650f6e9a307c58182e82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mml::thread::Thread::Thread</definition>
        <argsstring>(const Thread &amp;thread_copy)</argsstring>
        <name>Thread</name>
        <param>
          <type>const <ref refid="classmml_1_1thread_1_1Thread" kindref="compound">Thread</ref> &amp;</type>
          <declname>thread_copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="30" column="1" bodyfile="include/mml/Thread.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1aaa5137ada2f6563d759ae1067d3e89db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mml::thread::Thread::Thread</definition>
        <argsstring>(int max_i2)</argsstring>
        <name>Thread</name>
        <param>
          <type>int</type>
          <declname>max_i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="33" column="1" bodyfile="include/mml/Thread.hpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1a41f19eb3e364ab6da47b9f24fcf8d402" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmml_1_1thread_1_1Thread" kindref="compound">Thread</ref> &amp;</type>
        <definition>Thread&amp; mml::thread::Thread::operator=</definition>
        <argsstring>(const Thread &amp;thread_temp)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmml_1_1thread_1_1Thread" kindref="compound">Thread</ref> &amp;</type>
          <declname>thread_temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="38" column="8" bodyfile="include/mml/Thread.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1a390497ea41f30dd2f48d433e275f4be0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mml::thread::Thread::set_max_i</definition>
        <argsstring>(int max_temp)</argsstring>
        <name>set_max_i</name>
        <param>
          <type>int</type>
          <declname>max_temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Die maximale Anzahl an vorhandenen Threads</para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="49" column="6" bodyfile="include/mml/Thread.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1aea68ae5d90affb2ec9bd0148e508d2e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::thread::Thread::thread_writing_true</definition>
        <argsstring>()</argsstring>
        <name>thread_writing_true</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>aktuelles Schreiben aktiv oder nicht aktiv setzen und dessen Abfrage</para>
</simplesect>
<simplesect kind="author"><para>Mike</para>
</simplesect>
<simplesect kind="author"><para>Mike Moser</para>
</simplesect>
Programm: <ref refid="Thread_8cpp" kindref="compound">Thread.cpp</ref></para>
<para>Enthält verschiedene Funktionen für Threads </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="56" column="6" bodyfile="src/Thread.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1a54d5be439315782c43ecb4f6e78e99e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::thread::Thread::thread_writing_false</definition>
        <argsstring>()</argsstring>
        <name>thread_writing_false</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="57" column="6" bodyfile="src/Thread.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1a2a309c3e1f84b51ae205beec2c22bf3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mml::thread::Thread::is_writing_active</definition>
        <argsstring>()</argsstring>
        <name>is_writing_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="58" column="6" bodyfile="src/Thread.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1aa1f1dbc2ea0f6bf44347990ed5e044b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::thread::Thread::thread_sleep</definition>
        <argsstring>(float second)</argsstring>
        <name>thread_sleep</name>
        <param>
          <type>float</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Versetzt den aktuellen <ref refid="classmml_1_1thread_1_1Thread" kindref="compound">Thread</ref> in den Sleep-Modus</para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="65" column="6" bodyfile="src/Thread.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1a471f18a979691ba155a9cc8e84917acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mml::thread::Thread::thread_sleep_millisecond</definition>
        <argsstring>(uint32_t millisecond)</argsstring>
        <name>thread_sleep_millisecond</name>
        <param>
          <type>uint32_t</type>
          <declname>millisecond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="66" column="6" bodyfile="src/Thread.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classmml_1_1thread_1_1Thread_1af0f8af249ce24749198b7e990a78abc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mml::thread::Thread::waiting</definition>
        <argsstring>(int a=0)</argsstring>
        <name>waiting</name>
        <param>
          <type>int</type>
          <declname>a</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Wartefunktion beim mehrfachen Schreiben Nicht immer gleiche Reihenfolge, wenn a nicht verwendet.</para>
</simplesect>
<simplesect kind="return"><para>true, wenn kein <ref refid="classmml_1_1thread_1_1Thread" kindref="compound">Thread</ref> mehr schreiben will </para>
</simplesect>
<simplesect kind="author"><para>Mike </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mml/Thread.hpp" line="76" column="6" bodyfile="src/Thread.cpp" bodystart="35" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/mml/Thread.hpp" line="19" column="1" bodyfile="include/mml/Thread.hpp" bodystart="19" bodyend="85"/>
    <listofallmembers>
      <member refid="classmml_1_1thread_1_1Thread_1a657e848c50b525367ce820ece964e80f" prot="private" virt="non-virtual"><scope>mml::thread::Thread</scope><name>i</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a2a309c3e1f84b51ae205beec2c22bf3d" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>is_writing_active</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a3ea4fcd4d546fcbfc2b2fbd6ce75c33f" prot="private" virt="non-virtual"><scope>mml::thread::Thread</scope><name>max_i</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a41f19eb3e364ab6da47b9f24fcf8d402" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>operator=</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a390497ea41f30dd2f48d433e275f4be0" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>set_max_i</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a8d08a3614525c022f8067a181c4e3b89" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>Thread</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1ab6188b06bb0e650f6e9a307c58182e82" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>Thread</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1aaa5137ada2f6563d759ae1067d3e89db" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>Thread</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1aa1f1dbc2ea0f6bf44347990ed5e044b1" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>thread_sleep</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a471f18a979691ba155a9cc8e84917acd" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>thread_sleep_millisecond</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a91bae489f2ee7d28a1324c67547884a4" prot="private" virt="non-virtual"><scope>mml::thread::Thread</scope><name>thread_writing_active</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1a54d5be439315782c43ecb4f6e78e99e5" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>thread_writing_false</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1aea68ae5d90affb2ec9bd0148e508d2e5" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>thread_writing_true</name></member>
      <member refid="classmml_1_1thread_1_1Thread_1af0f8af249ce24749198b7e990a78abc0" prot="public" virt="non-virtual"><scope>mml::thread::Thread</scope><name>waiting</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
