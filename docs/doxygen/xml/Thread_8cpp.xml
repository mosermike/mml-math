<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Thread_8cpp" kind="file" language="C++">
    <compoundname>Thread.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="Thread_8hpp" local="yes">mml/Thread.hpp</includes>
    <includes refid="mml_8hpp" local="yes">mml.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>mml/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="6">
        <label>mml.hpp</label>
        <link refid="mml_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>float.h</label>
      </node>
      <node id="25">
        <label>cstdint</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="7">
        <label>mml/definitions.hpp</label>
        <link refid="definitions_8hpp"/>
      </node>
      <node id="20">
        <label>fstream</label>
      </node>
      <node id="16">
        <label>random</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
      <node id="26">
        <label>mml/Unix.hpp</label>
        <link refid="Unix_8hpp"/>
      </node>
      <node id="8">
        <label>mml/file.hpp</label>
        <link refid="file_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="22">
        <label>mml/vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>mml/standards.hpp</label>
        <link refid="standards_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>mml/shell.hpp</label>
        <link refid="shell_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>mml/functions.hpp</label>
        <link refid="functions_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="18">
        <label>mml/help.hpp</label>
        <link refid="help_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>thread</label>
      </node>
      <node id="23">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>mml/Timer.hpp</label>
        <link refid="Timer_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>mml/Thread.hpp</label>
        <link refid="Thread_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Thread.cpp</label>
        <link refid="Thread_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Thread_8hpp" kindref="compound">mml/Thread.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mml_8hpp" kindref="compound">mml.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1thread_1_1Thread_1aea68ae5d90affb2ec9bd0148e508d2e5" kindref="member">mml::thread::Thread::thread_writing_true</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thread_writing_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1thread_1_1Thread_1a54d5be439315782c43ecb4f6e78e99e5" kindref="member">mml::thread::Thread::thread_writing_false</ref>()<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thread_writing_active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1thread_1_1Thread_1a2a309c3e1f84b51ae205beec2c22bf3d" kindref="member">mml::thread::Thread::is_writing_active</ref>()<sp/>{<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;thread_writing_active;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1thread_1_1Thread_1aa1f1dbc2ea0f6bf44347990ed5e044b1" kindref="member">mml::thread::Thread::thread_sleep</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>second)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>second<sp/>*<sp/>1000));</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1thread_1_1Thread_1a471f18a979691ba155a9cc8e84917acd" kindref="member">mml::thread::Thread::thread_sleep_millisecond</ref>(uint32_t<sp/>millisecond)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(millisecond));</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1thread_1_1Thread_1af0f8af249ce24749198b7e990a78abc0" kindref="member">mml::thread::Thread::waiting</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(this-&gt;is_writing_active())<sp/>{this-&gt;thread_sleep(0.1);}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>a<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thread_sleep_millisecond(i<sp/>+<sp/><ref refid="namespacemml_1_1functions_1ab0e3f9a7184313f2bedbb09500f2b784" kindref="member">mml::functions::get_random</ref>(1,<sp/>max_i<sp/>*<sp/>4)<sp/>+<sp/><ref refid="namespacemml_1_1functions_1ab0e3f9a7184313f2bedbb09500f2b784" kindref="member">mml::functions::get_random</ref>(1,<sp/>max_i<sp/>*<sp/>4));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thread_sleep_millisecond(a);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(this-&gt;is_writing_active())<sp/>{<sp/>this-&gt;thread_sleep_millisecond(10<sp/>*<sp/><ref refid="namespacemml_1_1functions_1ab0e3f9a7184313f2bedbb09500f2b784" kindref="member">mml::functions::get_random</ref>(1,<sp/>max_i<sp/>*<sp/>2));<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thread_writing_true();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>a<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>%<sp/>max_i)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*bool<sp/>waiting(int<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>while(this-&gt;is_writing_active())<sp/>{this-&gt;thread_sleep(0.1);}</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>this-&gt;thread_sleep_millisecond(a);</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>while(this-&gt;is_writing_active())<sp/>{this-&gt;thread_sleep(0.01);}</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>this-&gt;thread_writing_true();</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="66"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sleep<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1thread_1a579ddecc00f3ee6fbdd8fe06fd030e95" kindref="member">mml::thread::sleep</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(s<sp/>*<sp/>1000)));</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Thread.cpp"/>
  </compounddef>
</doxygen>
