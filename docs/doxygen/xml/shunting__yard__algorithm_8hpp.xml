<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="shunting__yard__algorithm_8hpp" kind="file" language="C++">
    <compoundname>shunting_yard_algorithm.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <includes local="no">mml/standards.hpp</includes>
    <includes local="no">mml/vector.hpp</includes>
    <includedby refid="mml-math_8hpp" local="yes">include/mml-math.hpp</includedby>
    <includedby refid="shunting__yard__algorithm_8cpp" local="yes">src/shunting_yard_algorithm.cpp</includedby>
    <includedby refid="sh-ya-algo_8cpp" local="yes">test/sh-ya-algo.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>mml/standards.hpp</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="1">
        <label>include/mml-math/shunting_yard_algorithm.hpp</label>
        <link refid="shunting__yard__algorithm_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>mml/vector.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/mml-math.hpp</label>
        <link refid="mml-math_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>test/calc.cpp</label>
        <link refid="calc_8cpp"/>
      </node>
      <node id="1">
        <label>include/mml-math/shunting_yard_algorithm.hpp</label>
        <link refid="shunting__yard__algorithm_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>test/sh-ya-algo.cpp</label>
        <link refid="sh-ya-algo_8cpp"/>
      </node>
      <node id="5">
        <label>src/shunting_yard_algorithm.cpp</label>
        <link refid="shunting__yard__algorithm_8cpp"/>
      </node>
      <node id="3">
        <label>calculator/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmml_1_1math_1_1shunting__yard__algorithm" prot="public">mml::math::shunting_yard_algorithm</innerclass>
    <innerclass refid="structmml_1_1math_1_1shunting__yard__algorithm_1_1FunctionInfo" prot="private">mml::math::shunting_yard_algorithm::FunctionInfo</innerclass>
    <innernamespace refid="namespacemml">mml</innernamespace>
    <innernamespace refid="namespacemml_1_1math">mml::math</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mml/standards.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mml/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>look<sp/>at<sp/>logb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mml_math_shunting_yard_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mml_math_shunting_yard_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemml" kindref="compound">mml</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">math<sp/>{</highlight></codeline>
<codeline lineno="21" refid="classmml_1_1math_1_1shunting__yard__algorithm" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmml_1_1math_1_1shunting__yard__algorithm" kindref="compound">shunting_yard_algorithm</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Structure<sp/>for<sp/>the<sp/>functions<sp/>map<sp/>with<sp/>the<sp/>range<sp/>and<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">FunctionInfo<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;double(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>func<sp/>=<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maps<sp/>of<sp/>recognized<sp/>functions<sp/>with<sp/>their<sp/>corresponding<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classmml_1_1math_1_1shunting__yard__algorithm_1a05ee1be918f1a200154393e9d28bf15e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>FunctionInfo&gt;<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a05ee1be918f1a200154393e9d28bf15e" kindref="member">functions</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;exp&quot;</highlight><highlight class="normal">,{-std::numeric_limits&lt;double&gt;::infinity(),<sp/>std::numeric_limits&lt;double&gt;::infinity(),<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::exp(x);<sp/>}}},</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;log10&quot;</highlight><highlight class="normal">,{0,<sp/>std::numeric_limits&lt;double&gt;::infinity(),<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::log10(x);<sp/>}}},</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ln&quot;</highlight><highlight class="normal">,{0,<sp/>std::numeric_limits&lt;double&gt;::infinity(),<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::log(x);<sp/>}}},</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;sqrt&quot;</highlight><highlight class="normal">,{0,<sp/>std::numeric_limits&lt;double&gt;::infinity(),<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(x);<sp/>}}},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;sin&quot;</highlight><highlight class="normal">,{-2*M_PI,<sp/>2*M_PI,<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sin(x);<sp/>}}},</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;cos&quot;</highlight><highlight class="normal">,{-2*M_PI,<sp/>2*M_PI,<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cos(x);<sp/>}}},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;tan&quot;</highlight><highlight class="normal">,{-M_PI,<sp/>M_PI,<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tan(x);<sp/>}}},</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;asin&quot;</highlight><highlight class="normal">,{-1,<sp/>1,<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::asin(x);<sp/>}}},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;acos&quot;</highlight><highlight class="normal">,{-1,<sp/>1,<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::acos(x);<sp/>}}},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;atan&quot;</highlight><highlight class="normal">,{-std::numeric_limits&lt;double&gt;::infinity(),<sp/>std::numeric_limits&lt;double&gt;::infinity(),<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::atan(x);<sp/>}}},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mml::string<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" kindref="member">equation</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="classmml_1_1math_1_1shunting__yard__algorithm_1a9a54d55bbdb438b0df59d561ecd3500b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;mml::string&gt;<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a9a54d55bbdb438b0df59d561ecd3500b" kindref="member">infix</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="47" refid="classmml_1_1math_1_1shunting__yard__algorithm_1a8c7d5293436272ad81ac335ded81516b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;mml::string&gt;<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a8c7d5293436272ad81ac335ded81516b" kindref="member">postfix</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="48" refid="classmml_1_1math_1_1shunting__yard__algorithm_1af8772e5025f2b4cb5d2a2cf1e4bc1757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1af8772e5025f2b4cb5d2a2cf1e4bc1757" kindref="member">result</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classmml_1_1math_1_1shunting__yard__algorithm_1a15ce32b55218e28e685e8a2ac71baad5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a15ce32b55218e28e685e8a2ac71baad5" kindref="member">shunting_yard_algorithm</ref>(mml::string<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" kindref="member">equation</ref>)<sp/>:<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" kindref="member">equation</ref>(<ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" kindref="member">equation</ref>)<sp/>{};</highlight></codeline>
<codeline lineno="51" refid="classmml_1_1math_1_1shunting__yard__algorithm_1a071d73fd37a7ae383f27f4edc104a1a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a071d73fd37a7ae383f27f4edc104a1a4" kindref="member">shunting_yard_algorithm</ref>(std::vector&lt;mml::string&gt;<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a9a54d55bbdb438b0df59d561ecd3500b" kindref="member">infix</ref>)<sp/>:<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a9a54d55bbdb438b0df59d561ecd3500b" kindref="member">infix</ref>(<ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a9a54d55bbdb438b0df59d561ecd3500b" kindref="member">infix</ref>)<sp/>{</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(mml::string<sp/>i<sp/>:<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a9a54d55bbdb438b0df59d561ecd3500b" kindref="member">infix</ref>)<sp/>{<ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" kindref="member">equation</ref><sp/>+=<sp/>i;}};</highlight></codeline>
<codeline lineno="52" refid="classmml_1_1math_1_1shunting__yard__algorithm_1ab17790bb0702e377189ae4c790fb1864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1ab17790bb0702e377189ae4c790fb1864" kindref="member">shunting_yard_algorithm</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classmml_1_1math_1_1shunting__yard__algorithm_1a66339099fda237a18f21bb54cbcd7e70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm" kindref="compound">shunting_yard_algorithm</ref>&amp;<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a66339099fda237a18f21bb54cbcd7e70" kindref="member">operator=</ref>(mml::string<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" kindref="member">equation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;equation<sp/>=<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a4a5d0e37a3262e56778e207491178120" kindref="member">equation</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;mml::string&gt;<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a2573cab343d4c5ca7230e9b215f25257" kindref="member">equation_to_infix</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;mml::string&gt;<sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1af1ce38dd38de7d9ed1f7472a85511823" kindref="member">infix_to_postfix</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a5d46b869a8f45b0706d1a231dc73ec12" kindref="member">precedence</ref>(mml::string<sp/>op)<sp/>noexcept;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1a376909ef0858656da4af9179b5438667" kindref="member">evaluate_postfix</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmml_1_1math_1_1shunting__yard__algorithm_1acb43e97fc972dab508feb426238adee6" kindref="member">evaluate</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/mml-math/shunting_yard_algorithm.hpp"/>
  </compounddef>
</doxygen>
